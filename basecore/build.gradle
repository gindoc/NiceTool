apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        buildConfigField "Boolean", "isDebug", "${isModule.toBoolean()}"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // 设置为true会关闭lint分析进度
        quiet true
        // 如果为true，则在发现错误时停止gradle构建
        abortOnError false
        // 如果为true，则只报告错误
        ignoreWarnings true
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.1.1'
//                    details.useVersion '25.2.0'
                }
            }
        }
    }
    dataBinding {
        enabled = true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    // 去掉第三方jar包中重复的类
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    implementation 'com.android.support:multidex:1.0.3'
    /**
     * dagger2
     */
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    /**
     * rx系列
     */
//    implementation "com.trello:rxlifecycle:$rootProject.rxLifeCycleVersion"
//    implementation "com.trello:rxlifecycle-android:$rootProject.rxLifeCycleVersion"
//    implementation "com.trello:rxlifecycle-components:$rootProject.rxLifeCycleVersion"
//    implementation "io.reactivex:rxjava:$rootProject.rxjavaVersion"
//    implementation "io.reactivex:rxandroid:$rootProject.rxandroidVersion"

    implementation "com.trello.rxlifecycle2:rxlifecycle:$rootProject.rxLifeCycle2version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rootProject.rxLifeCycle2version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.rxLifeCycle2version"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroid2Version"

    /**
     * 网络请求系列
     */
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.squareup.okio:okio:$rootProject.okioVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
    implementation "com.google.guava:guava:$rootProject.guavaVersion"

    implementation 'me.yokeyword:fragmentation:0.10.3'

    // 内存泄漏检测系列
    if (isModule.toBoolean()) {
        implementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    } else {
        implementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    }

    /**
     * 测试系列
     */
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC2'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.0'
    testImplementation 'org.powermock:powermock-core:1.7.0'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.7.0'

    // router
    compile ("com.alibaba:arouter-api:$rootProject.arouterApiVersion",{
        exclude group: "com.android.support"
    })
//    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"

    // FcPermissions
    implementation "com.github.lypeer:FcPermissions:v0.0.1"

    implementation 'com.github.Aspsine:SwipeToLoadLayout:1.0.4'

    implementation 'com.a3xh1.loadingDialog:loadingDialog:1.1.0'

    implementation 'com.qihoo360.replugin:replugin-host-lib:2.2.4'


}

apply plugin: 'maven'

uploadArchives {
    repositories.mavenDeployer {
        repository(url: LOCAL_REPO_URL)
        pom.groupId = GROUP
        pom.artifactId = POM_ARTIFACT_ID
        pom.version = VERSION
    }
}